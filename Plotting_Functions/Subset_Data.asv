% --- Function to subset data based on checked boxes 
function data_ind = Subset_Data(app,event)

% Get checked nodes in Tree
checked_nodes = app.Tree.CheckedNodes;
for i = 1:length(checked_nodes)
    checked_text{i} = checked_nodes(i).Text;
end

% Compare with fieldnames in app.Aligned_Labels
% app.Aligned_Labels organization scheme:
%   (label feature name)
%       Aligned: structure-level alignment with class label
%       Sub_Class: all sub-levels of (label feature name) including
%       quantiles for quantitative features and then all the different
%       categorical labels for other features.
class_opts = fieldnames(app.Aligned_Labels);

% This includes all the parent features but will not include any of the
% parent features that have a sub-node selected (thx Matlab :/)
overlaps = intersect(checked_text, class_opts);

% Iterating through class_opts because that is more of an exhaustive list
% of the different labels within the dataset
data_ind = ones(height(app.Full_Feature_set),1);

for j = 1:length(class_opts)

    % All the possible sub-classes for that given feature (cell-array)
    sub_chiles = app.Aligned_Labels.(class_opts{j}).Sub_Class;
    
    
    % If there are any non-overlaps between the two then that means that
    % there is a selection made to exclude a sub-category
    if ~isempty(setdiff(sub_chiles,checked_text))
        
        % Non-overlap here includes all of the sub-classes that are not
        % checked
        non_overlap = setdiff(sub_chiles,checked_text);
        
        ind_labels = app.Aligned_Labels.(class_opts{j}).Aligned;
        % Finding overlap with existing ignored labels
        [T,rows_in_T] = innerjoin(ind_labels,app.Ignore_idx);
        [~,sortinds] = sort(rows_in_T);
        ign_labels = T(sortinds,:);
        
        % ign_labels contains labels that overlap with those in
        % app.Aligned_Labels.(class_opts{j}).Aligned and those in
        % app.Ignore_idx.  If a sample does not have the same label as
        % the un-checked and it is not in the app.Ignore_idx from a
        % previous subsetting or notes operation then it stays.  
            
        % Check type of label
        if isnumeric(ind_labels.Class)
            
            for p = 1:length(non_overlap)
                % Numeric labels are subset according to quartiles
                first_val = strsplit(non_overlap{p},'<');
                first_val = first_val{1};
                first_val = str2num(first_val);
                sec_val = strsplit(non_overlap{p},'=');
                sec_val = sec_val{end};
                sec_val = str2num(sec_val);

                data_ind(find(ind_labels.Class<=first_val | ind_labels.Class>=sec_val | ign_labels.Ignore)) = 0;
            end

        else
            data_ind(find(ismember(ind_labels.Class,non_overlap) | ign_labels.Ignore)) = 0

        end            
            
    else

        data_labels = app.Full_Feature_set.ImgLabel;
        [data_aligned,rows_in_T] = innerjoin(app.Ignore_idx,cell2table(data_labels,'VariableNames',{'ImgLabel'}));
        [~,sortinds] = sort(rows_in_T);
        
        class_data_ind = data_aligned(sortinds,:);
        data_ind(find(class_data_ind.Ignore)) = 0;
        
    end
end

